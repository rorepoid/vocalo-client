#!/bin/bash

# Checks if locally staged changes are formatted properly ignoring non-staged changes.
# Install it with the `install-hooks.sh` script
# Based on: https://gist.github.com/cvogt/2676ed6c6d1abafa3d6a

PATH=$PATH:/usr/local/bin:/usr/local/sbin
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[0;33m'
NC='\033[0m' # No Color

echo ""
echo -e "${YELLOW} Running git/pre-commit hook...${NC} (you can omit this with --no-verify, but don't)"

echo -e "${YELLOW}* Moving to the project directory…${NC}"
_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
DIR=$( echo $_DIR | sed 's/\/.git\/hooks$//' )

echo -e "${YELLOW}* Stashing non-staged changes so we avoid checking them…${NC}"
git diff --quiet
hadNoNonStagedChanges=$?

if ! [ $hadNoNonStagedChanges -eq 0 ]
then
	git stash --keep-index -u > /dev/null
fi

echo -e "${YELLOW}* Checking pre commit conditions (make git/pre-commit)…${NC}"
make git/pre-commit > /dev/null
canCommit=$?

if [ $canCommit -ne 0 ]
then
	echo -e "${RED}  [KO] Error :(${NC}"
fi

echo -e "${YELLOW}* Applying the stash with the non-staged changes…${NC}"
if ! [ $hadNoNonStagedChanges -eq 0 ]
then
	sleep 1 && git stash pop --index > /dev/null & # sleep because otherwise commit fails when this leads to a merge conflict
fi

# Final result
echo ""

if [ $canCommit -eq 0 ]
then
    echo -e "${GREEN}[OK] Your code will be commited young Padawan${NC}"
    exit 0
else
    echo -e "${RED}[KO] Cancelling commit due to test code style error (run 'make git/pre-commit' for more information)${NC}"
    exit 1
fi
